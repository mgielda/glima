#+TITLE: Glima -- Gmail CLI client.
#+AUTHOR:
#+EMAIL:
#+DATE:
#+OPTIONS: H:3 num:2 toc:nil
#+OPTIONS: ^:nil @:t \n:nil ::t |:t f:t TeX:t
#+OPTIONS: skip:nil
#+OPTIONS: author:t
#+OPTIONS: email:nil
#+OPTIONS: creator:nil
#+OPTIONS: timestamp:nil
#+OPTIONS: timestamps:nil
#+OPTIONS: d:nil
#+OPTIONS: tags:t
#+TEXT:
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE: ja
#+STARTUP: odd
#+LATEX_CLASS: jsarticle
#+LATEX_CLASS_OPTIONS: [a4j,dvipdfmx]
# #+LATEX_HEADER: \usepackage{plain-article}
# #+LATEX_HEADER: \renewcommand\maketitle{}
# #+LATEX_HEADER: \pagestyle{empty}
# #+LaTeX: \thispagestyle{empty}

* Installation
  Glima requires Ruby 2.3 or newer.

** Install using gem
  #+BEGIN_SRC sh
    $ gem install glima
  #+END_SRC

** Install in sandbox
  It uses safe navigation operator (=&.=) introduced in Ruby 2.3.

  #+BEGIN_SRC sh
    $ gem install bundler
    $ mkdir /path/to/install/glima
    $ cd /path/to/install/glima
    $ bundle init
    $ echo 'gem "glima"' >> Gemfile
    $ bundle install --path=vendor/bundle --binstubs=exe
    $ export PATH=/path/to/install/glima/exe:$PATH
  #+END_SRC

** Install from Docker image
   #+BEGIN_SRC sh
     $ docker pull nom4476/glima
     $ curl https://raw.githubusercontent.com/yoshinari-nomura/glima/master/exe/glima-docker.sh > glima
     $ chmod +x glima
     $ mkdir -p ~/.config/glima ~/.cache/glima
     $ ./glima help
   #+END_SRC

* Setup
  1) Get OAuth CLIENT_ID/CLIENT_SECRET

     Visit https://console.developers.google.com and follow the instruction.
     Googling 'Creating a Google API Console project and client ID' would help.

  2) Create app config file interactively
     #+BEGIN_SRC sh
       $ glima init

       Creating ~/.config/glima/config.yml ...
       Get your CLIENT_ID/CLIENT_SECRET at https://console.developers.google.com
       Googling 'Creating a Google API Console project and client ID' would help.
       CLIENT_ID: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com
       CLIENT_SECRET: xxxxxxxxxxxxxxxxxxxxxxxx
       Gmail address: xxxxxxxxxxxxxxx@gmail.com

       Making config directory ~/.config/glima ...
             create  /Users/nom/.config/glima
       Making cache directory ~/.cache/glima ...
              exist  Ignore /Users/nom/.cache/glima
       Copying file(s) into ~/.config/glima/config.yml ...
              exist  Ignore ~/.config/glima
                 ok  copy /Users/nom/.config/glima/config.yml
       done.
     #+END_SRC

  3) Grant OAuth access to Gmail server (browser will be invoked)
     #+BEGIN_SRC sh
       $ glima auth

       Authenticating xxxxxxxxxxxxxxx@gmail.com...
       Enter the resulting code: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
     #+END_SRC
     If you want to add another account, try ~glima auth --user=another_account~.

  4) Check your inbox
     #+BEGIN_SRC sh
       $ glima scan +inbox

       1 09/27 14:22 15ec1c9bd2c7f18d Hello....
       2 09/27 14:00 15ec1b716bbb6bdc Yeah...
       :
     #+END_SRC

* Japanese blog entry about glima xzip.
  [[http://quickhack.net/nom/blog/2017-11-06-password-is-in-another-mail.html][「パスワードは別途お送りします」をなんとかしたい]]
